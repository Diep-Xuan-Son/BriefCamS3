version: '3'
networks:
  mynetwork:
    driver: bridge
services:
  redis:
    image: redis
    container_name: redis_briefcam
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports: 
      - "6380:6379"
    # volumes:
    #   - ./data:/data
    #   - ./config/redis1.conf:/usr/local/etc/redis/redis.conf
    profiles:
      - dev1
    # command: redis-server /usr/local/etc/redis/redis.conf

  briefcam:
    image: mq/briefcam
    container_name: briefcam
    restart: always
    # depends_on:
    #   redis:
    #     condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:3456/api/healthcheck || exit 1"]
    environment:
      - REDISTOGO_URL = redis://192.168.6.159:6380
      - URL_AUTH = http://openstack.test.mqsolutions.vn/identity/v3/auth/tokens
      - URL_ACCESS = http://s3.openstack.test.mqsolutions.vn/v1
      - FOLDER_STORAGE = videos_storage
      - FOLDER_SUMMARY = video_summary
    build:
      dockerfile: Dockerfile_briefcam
    ports: 
      - "3456:3456"
    # volumes:
    #   - .:/workspace/
    networks:
      mynetwork:
    profiles:
      - briefcam
    command: sh -c "nohup python3 worker.py & python3 controllers.py"


# docker compose -f docker-compose.yml --profile dev1 up -d
# docker compose -f docker-compose.yml --profile "*" up -d
# docker compose -f docker-compose.yml --profile triton_server up -d